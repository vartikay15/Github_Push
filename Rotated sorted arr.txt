SEARCH IN ROTATED SORTED ARR


#include <bits/stdc++.h> 
int Pivot(vector<int>& arr , int n)
{
    int s = 0;
    int e = n-1;
    int mid = s+(e-s)/2;
    while(s<e)
    {
        if (arr[mid]>=arr[0])
        {
            s = mid+1;
        }
        else
        {
            e = mid;
        }
        mid = s+(e-s)/2;
    }
    return s;  
}

int binsearch(vector<int>& arr, int s, int e, int key)
{
    int start = s;
    int end = e;
    int mid = start+(end-start)/2;
    while(start<=end)
    {
        if(arr[mid]==key)
        {
        return mid;
        }
        else if(key>arr[mid])
        {
            start = mid+1;
        }
        else if(key<arr[mid])
        {
            end = mid-1;
        }
        mid = start+(end-start);
    }
    return -1;

}

int findPosition(vector<int>& arr, int n, int k)
{
    int pivot = Pivot(arr,n);
    if( k>=arr[pivot]&&k<=n-1)
    {
        return binsearch(arr,pivot,n-1,k);
    }
    else
    {
        return binsearch(arr,0,pivot-1,k);
    }

}

